Q1 What happens when you initialize a repository? Why do you need to do it?

A1 Initializing a repository creates the .git file which stores the metadata
describing the files and their status at a point in time (commit). 

Q2 How is the staging area different from the working directory and the repository?
What value do you think it offers?

A2 The staging area gives you a way to specify which files you want to include in
a commit. It provides an opportunity for review and revision.

Q3 How can you use the staging area to make sure you have one commit per logical change?

A3 You can review the staging area with git status to confirm that only the files associated
with the change are included in the commit. You can compare the files in the master, staging
area, and most recent commit to confirm that the staged files represent the logical change. 

Q4 What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?

A4 Branches would be helpful when making an experimental change or when developing different
version of the code, as they would allow each variant to function as an independent development
project.

Q5 How do the diagrams help you visualize the branch structure?

A5 The diagrams make it clear which commits are part of each branch, and where the splits occur.
 
